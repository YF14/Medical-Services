// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(uuid()) @db.Uuid
  phoneNumber String  @unique @db.VarChar(255)
  name        String  @db.VarChar(255)
  password    String  @db.VarChar(255)
  role        Role    @relation(fields: [roleId], references: [id])
  roleId      String  @unique @db.Uuid
  setting     Setting @relation(fields: [settingId], references: [id])
  address     Address @relation(fields: [addressId], references: [id])
  addressId   String  @unique @db.Uuid
  settingId   String  @unique @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dr        dr?
}

model Address {
  id   String @id @default(uuid()) @db.Uuid
  city String
  town String
  user User?
}

model Role {
  id       String   @id @default(uuid()) @db.Uuid
  name     String   @default("user") @db.VarChar(255)
  isVerify Boolean? @default(true)

  User User?
}

model Setting {
  id String @id @default(uuid()) @db.Uuid

  avatar   String
  language String   @default("ar") @db.VarChar(9)
  darkmode Boolean  @default(false)
  bio      String   @db.VarChar(255)
  dob      DateTime
  gender   String   @db.VarChar(9)
  User     User?
}

model dr {
  id              String            @id @default(uuid()) @db.Uuid
  user            User?             @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String?           @unique @db.Uuid
  cost            Float
  openAt          Int
  closeAt         Int
  xp              Int
  description     String            @db.Text
  SpecialtiesOnDr SpecialtiesOnDr[]
}

model specialties {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  SpecialtiesOnDr SpecialtiesOnDr[]
}

model SpecialtiesOnDr {
  dr            dr          @relation(fields: [drId], references: [id])
  drId          String      @db.Uuid
  specialties   specialties @relation(fields: [specialtiesId], references: [id])
  specialtiesId Int

  @@id([specialtiesId, drId])
}
